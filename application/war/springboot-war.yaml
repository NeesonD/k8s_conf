## 以 sidecar 的形式部署 war + tomcat
# 项目见 https://github.com/NeesonD/springboot-war-k8s.git
# 修改 java.security ,tomcat 启动的时候有个地方很慢

apiVersion: v1
kind: Namespace
metadata:
  name: test-neeson #环境 + 项目组

---

apiVersion: v1
kind: Service
metadata:
  name: war-service
  namespace: test-neeson
  labels:
    app: spring
spec:
  ports:
    - port: 18081
      protocol: TCP
      targetPort: 8080
  selector:
    app: spring
    tier: backend-war

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-deployment
  namespace: test-neeson
  labels:
    app: spring
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: spring
      tier: backend-war
  template:
    metadata:
      labels:
        app: spring
        tier: backend-war
    spec:
      #标签
#      nodeSelector:
#        disktype: ssd
      volumes:
        - name: app-volume
          emptyDir:
            {}
      initContainers:
        - name: spring-war
          image: neesond/simple-war:v1
          command: ["cp","/app.war","/app"]
          volumeMounts:
            - mountPath: /app
              name: app-volume
      containers:
        - name: tomcat8
          image: neesond/tomcat8:v1
          volumeMounts:
            - mountPath: /usr/local/tomcat/webapps
              name: app-volume
          ports:
            - containerPort: 8080
          #存活探针
          livenessProbe:
            httpGet:
              port: 8080
              #这里要加应用名字
              path: /app/actuator/health
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 5
            initialDelaySeconds: 60  #60s之后开始检测存活状态
          #就绪探针，只有请求成功，才会对外提供服务
          readinessProbe:
            httpGet:
              port: 8080
              path: /app/actuator/health
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 5
            initialDelaySeconds: 60
          #生命周期钩子
          #          lifecycle:
          #            postStart:
          #              exec:
          #                command:
          #                  - sh
          #                  - -c
          #                  - "ls"
          #            preStop:  #这会阻塞SIGTERM信号
          #              exec:
          #                command:
          #                  - sh
          #                  - -c
          #                  - "sleep 5"
          #资源限制
          resources:
            requests: #资源申请最小值
              cpu: 100m
              memory: 100Mi
            limits:   #资源申请最大值
              cpu: 200m
              memory: 500Mi

