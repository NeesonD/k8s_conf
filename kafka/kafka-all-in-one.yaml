---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    app: kafka
spec:
  ports:
    - port: 9093
      name: server
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  minAvailable: 2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka-svc
  selector:
    matchLabels:
      app: kafka
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            - labelSelector:
#                matchExpressions:
#                  - key: "app"
#                    operator: In
#                    values:
#                      - kafka
#              topologyKey: "kubernetes.io/hostname"
#        podAffinity:
#          preferredDuringSchedulingIgnoredDuringExecution:
#            - weight: 1
#              podAffinityTerm:
#                labelSelector:
#                  matchExpressions:
#                    - key: "app"
#                      operator: In
#                      values:
#                        - zk
#                topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 300
      containers:
        - name: k8s-kafka
          imagePullPolicy: IfNotPresent
          image: neesond/kafka:2.10-0.8.2.1
          resources:
            limits:
              memory: "1Gi"
#              cpu: 500m
          env:
            - name: KF_REPLICAS
              value: "3"
          ports:
            - containerPort: 9093
              name: server
          command:
            - /bin/bash
            - -c
            - "/opt/kafka/bin/kafkaGenConfig.sh && /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties"
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            timeoutSeconds: 1
